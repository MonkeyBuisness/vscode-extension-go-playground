{
	"name": "go-playground",
	"displayName": "go-playground",
	"description": "Simple Go Playground environment in your VScode",
	"version": "0.2.0",
	"engines": {
		"vscode": "^1.55.0"
	},
	"categories": [
		"Programming Languages",
		"Visualization",
		"Other"
	],
	"icon": "resources/icon.png",
	"activationEvents": [
		"onCommand:go-playground.play",
		"onCommand:go-playground.changeSanboxDir",
		"onView:sandboxesView",
		"onView:toysView"
	],
	"bugs": {
		"email": "gutorov.artem@ayndex.ru",
		"url": "https://github.com/MonkeyBuisness/vscode-extension-go-playground/issues"
	},
	"author": {
		"email": "gutorov.artem@yandex.ru",
		"name": "Artsem Hutarau"
	},
	"publisher": "ArtsemHutarau",
	"repository": {
		"url": "https://github.com/MonkeyBuisness/vscode-extension-go-playground"
	},
	"keywords": [
		"go",
		"golang",
		"go playground",
		"sandbox",
		"playground"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": {
			"title": "Go Playground",
			"properties": {
				"go-playground.sandboxDir": {
					"type": "string",
					"description": "Specifies the path to the directory with sandbox items. It is recommended to use a directory inside {GOPATH}"
				},
				"go-playground.cloudAPI": {
					"type": "string",
					"default": "https://play.golang.org",
					"description": "Specifies the URL of the cloud Go Playground"
				}
			}
		},
		"commands": [
			{
				"command": "go-playground.play",
				"title": "Play Go"
			},
			{
				"command": "go-playground.changeSanboxDir",
				"title": "Change Sandoxes Directory",
				"icon": {
					"light": "resources/light/folder_cog.svg",
					"dark": "resources/dark/folder_cog.svg"
				}
			},
			{
				"command": "go-playground.runRemote",
				"title": "Run Sandbox Remotely"
			},
			{
				"command": "go-playground.fmtRemote",
				"title": "Format Sandbox code Remotely"
			},
			{
				"command": "go-playground.share",
				"title": "Share your Sandbox code"
			},
			{
				"command": "go-playground.runLocal",
				"title": "Run Sandbox Locally"
			},
			{
				"command": "go-playground.fmtLocal",
				"title": "Format Sandbox code Locally"
			},
			{
				"command": "sandboxesView.refresh",
				"title": "Refresh",
				"icon": {
					"light": "resources/light/refresh.svg",
					"dark": "resources/dark/refresh.svg"
				}
			},
			{
				"command": "sandboxesView.newItem",
				"title": "Create New Sandbox",
				"icon": {
					"light": "resources/light/new_item.svg",
					"dark": "resources/dark/new_item.svg"
				}
			},
			{
				"command": "sandbox.item.open",
				"title": "Open On Playground"
			},
			{
				"command": "sandboxesView.item.delete",
				"title": "Delete sandbox",
				"icon": {
					"light": "resources/light/item_delete.svg",
					"dark": "resources/dark/item_delete.svg"
				}
			},
			{
				"command": "toysView.playToy",
				"title": "Create New Sandbox with Selected Toy",
				"icon": {
					"light": "resources/light/play_toy.svg",
					"dark": "resources/dark/play_toy.svg"
				}
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "go-playground",
					"title": "Go Playground",
					"icon": "resources/ext.svg"
				}
			]
		},
		"views": {
			"go-playground": [
				{
					"id": "envView",
					"type": "webview",
					"name": "Environment"
				},
				{
					"id": "toysView",
					"name": "Toys"
				},
				{
					"id": "sandboxesView",
					"name": "Sandboxes"
				}
			]
		},
		"menus": {
			"commandPalette": [
				{
					"command": "sandboxesView.refresh"
				}
			],
			"view/title": [
				{
					"command": "go-playground.changeSanboxDir",
					"when": "view == sandboxesView",
					"group": "navigation"
				},
				{
					"command": "sandboxesView.refresh",
					"when": "view == sandboxesView && go-playground.sandboxDirSpecified",
					"group": "navigation"
				},
				{
					"command": "sandboxesView.newItem",
					"when": "view == sandboxesView && go-playground.sandboxDirSpecified",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "sandboxesView.item.delete",
					"when": "view == sandboxesView && viewItem == 'sandbox-item'",
					"group": "inline"
				},
				{
					"command": "sandboxesView.item.delete",
					"when": "view == sandboxesView && viewItem == 'sandbox-item'"
				},
				{
					"command": "sandbox.item.open",
					"when": "view == sandboxesView && viewItem == 'sandbox-item'"
				},
				{
					"command": "toysView.playToy",
					"when": "view == toysView && viewItem == 'toy' && go-playground.sandboxDirSpecified",
					"group": "inline"
				},
				{
					"command": "toysView.playToy",
					"when": "view == toysView && viewItem == 'toy' && go-playground.sandboxDirSpecified"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.4",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.55.0",
		"@typescript-eslint/eslint-plugin": "^4.14.1",
		"@typescript-eslint/parser": "^4.14.1",
		"eslint": "^7.19.0",
		"glob": "^7.1.6",
		"mocha": "^8.2.1",
		"typescript": "^4.1.3",
		"vscode-test": "^1.5.0"
	},
	"dependencies": {
		"@types/node-fetch": "^2.5.10",
		"node-fetch": "^2.6.1",
		"reflect-metadata": "^0.1.13",
		"tsyringe": "^4.5.0",
		"uniquefilename": "^1.1.2"
	}
}
