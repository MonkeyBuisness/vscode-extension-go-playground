{
	"name": "go-playground",
	"displayName": "go-playground",
	"description": "Simple Go Playground environment in your VScode",
	"version": "0.2.0",
	"engines": {
		"vscode": "^1.55.0"
	},
	"categories": [
		"Programming Languages",
		"Visualization",
		"Other"
	],
	"icon": "resources/icon.png",
	"activationEvents": [
		"onCommand:go-playground.play",
		"onCommand:go-playground.changeSanboxDir",
		"onView:sandboxesView",
		"onView:toysView",
		"onView:envsView",
		"onView:wikiView"
	],
	"bugs": {
		"email": "gutorov.artem@ayndex.ru",
		"url": "https://github.com/MonkeyBuisness/vscode-extension-go-playground/issues"
	},
	"author": {
		"email": "gutorov.artem@yandex.ru",
		"name": "Artsem Hutarau"
	},
	"publisher": "ArtsemHutarau",
	"repository": {
		"url": "https://github.com/MonkeyBuisness/vscode-extension-go-playground"
	},
	"keywords": [
		"go",
		"golang",
		"go playground",
		"sandbox",
		"playground"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": {
			"title": "Go Playground",
			"properties": {
				"go-playground.sandboxDir": {
					"type": "string",
					"description": "Specifies the path to the directory with sandbox items. It is recommended to use a directory inside {GOPATH}"
				},
				"go-playground.cloudAPI": {
					"type": "string",
					"default": "https://play.golang.org",
					"description": "Specifies the URL of the cloud Go Playground"
				},
				"go-playground.toys": {
					"type": "array",
					"items": {
						"type": "object",
						"title": "Toy definition",
						"properties": {
							"name": {
								"type": "string",
								"description": "Toy's name",
								"required": true
							},
							"template": {
								"type": "string",
								"description": "Toy's template (golang code)",
								"required": true
							}
						}
					},
					"default": [],
					"description": "Specifies the list of the custom toys"
				},
				"go-playground.envs": {
					"type": "array",
					"items": {
						"type": "object",
						"title": "Environment definition",
						"properties": {
							"name": {
								"type": "string",
								"description": "Environment name",
								"required": true
							},
							"command": {
								"type": "string",
								"description": "Environment command. You can use the ${{sandbox}} alias for the currently open sandbox file to define the command",
								"required": true
							},
							"description": {
								"type": "string",
								"description": "Environment description",
								"required": false
							},
							"cloudURL": {
								"type": "string",
								"description": "Cloud URL Environment. If this field is set, the \"command\" field will be ignored",
								"required": true
							},
							"showOnStatusBar": {
								"type": "boolean",
								"description": "Display this environment on Status Bar for the quick access",
								"required": true,
								"default": false
							}
						}
					},
					"default": [],
					"description": "Specifies the Go Playground environments"
				}
			}
		},
		"commands": [
			{
				"command": "go-playground.play",
				"title": "Play Go"
			},
			{
				"command": "go-playground.run",
				"title": "Run Go On Playground"
			},
			{
				"command": "go-playground.changeSanboxDir",
				"title": "Change Sandoxes Directory",
				"icon": {
					"light": "resources/icons/light/folder_cog.svg",
					"dark": "resources/icons/dark/folder_cog.svg"
				}
			},
			{
				"command": "go-playground.refreshSanboxDir",
				"title": "Refresh",
				"icon": {
					"light": "resources/icons/light/refresh.svg",
					"dark": "resources/icons/dark/refresh.svg"
				}
			},
			{
				"command": "go-playground.newSandbox",
				"title": "Create New Sandbox",
				"icon": {
					"light": "resources/icons/light/new_item.svg",
					"dark": "resources/icons/dark/new_item.svg"
				}
			},
			{
				"command": "go-playground.newToy",
				"title": "Create New Toy",
				"icon": {
					"light": "resources/icons/light/add_toy.svg",
					"dark": "resources/icons/dark/add_toy.svg"
				}
			},
			{
				"command": "go-playground.newEnv",
				"title": "Create New Environment",
				"icon": {
					"light": "resources/icons/light/add_env.svg",
					"dark": "resources/icons/dark/add_env.svg"
				}
			},
			{
				"command": "go-playground.sandbox.item-open",
				"title": "Open On Playground"
			},
			{
				"command": "go-playground.sandbox.item-delete",
				"title": "Delete Sandbox"
			},
			{
				"command": "go-playground.toys.play",
				"title": "Create New Sandbox with Selected Toy",
				"icon": {
					"light": "resources/icons/light/play_toy.svg",
					"dark": "resources/icons/dark/play_toy.svg"
				}
			},
			{
				"command": "go-playground.toys.delete",
				"title": "Delete Toy"
			},
			{
				"command": "go-playground.toys.edit",
				"title": "Edit Toy"
			},
			{
				"command": "go-playground.envs.edit",
				"title": "Edit Environment"
			},
			{
				"command": "go-playground.envs.delete",
				"title": "Delete Environment"
			},
			{
				"command": "go-playground.envs.showOnStatusBar",
				"title": "Show Environment On Status Bar",
				"icon": {
					"light": "resources/icons/light/eye_off.svg",
					"dark": "resources/icons/dark/eye_off.svg"
				}
			},
			{
				"command": "go-playground.envs.hideOnStatusBar",
				"title": "Hide Environment On Status Bar",
				"icon": {
					"light": "resources/icons/light/eye_check.svg",
					"dark": "resources/icons/dark/eye_check.svg"
				}
			},
			{
				"command": "go-playground.wiki.openURL",
				"title": "Open Wiki URL"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "go-playground",
					"title": "Go Playground",
					"icon": "resources/ext.svg"
				}
			]
		},
		"views": {
			"go-playground": [
				{
					"id": "envsView",
					"name": "Environments"
				},
				{
					"id": "toysView",
					"name": "Toys"
				},
				{
					"id": "sandboxesView",
					"name": "Sandboxes"
				},
				{
					"id": "wikiView",
					"name": "Wiki"
				}
			]
		},
		"menus": {
			"commandPalette": [
				{
					"command": "go-playground.refreshSanboxDir"
				},
				{
					"command": "go-playground.newToy"
				}
			],
			"view/title": [
				{
					"command": "go-playground.changeSanboxDir",
					"when": "view == sandboxesView",
					"group": "navigation"
				},
				{
					"command": "go-playground.refreshSanboxDir",
					"when": "view == sandboxesView && go-playground.sandboxDirSpecified",
					"group": "navigation"
				},
				{
					"command": "go-playground.newSandbox",
					"when": "view == sandboxesView && go-playground.sandboxDirSpecified",
					"group": "navigation"
				},
				{
					"command": "go-playground.newToy",
					"when": "view == toysView",
					"group": "navigation"
				},
				{
					"command": "go-playground.newEnv",
					"when": "view == envsView",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "go-playground.sandbox.item-delete",
					"when": "view == sandboxesView && viewItem == 'sandbox-item'"
				},
				{
					"command": "go-playground.sandbox.item-open",
					"when": "view == sandboxesView && viewItem == 'sandbox-item'"
				},
				{
					"command": "go-playground.toys.play",
					"when": "view == toysView && viewItem == 'toy' && go-playground.sandboxDirSpecified",
					"group": "inline"
				},
				{
					"command": "go-playground.toys.play",
					"when": "view == toysView && viewItem == 'toy' && go-playground.sandboxDirSpecified"
				},
				{
					"command": "go-playground.toys.play",
					"when": "view == toysView && viewItem == 'user-toy' && go-playground.sandboxDirSpecified",
					"group": "inline"
				},
				{
					"command": "go-playground.toys.play",
					"when": "view == toysView && viewItem == 'user-toy' && go-playground.sandboxDirSpecified"
				},
				{
					"command": "go-playground.toys.delete",
					"when": "view == toysView && viewItem == 'user-toy'"
				},
				{
					"command": "go-playground.toys.edit",
					"when": "view == toysView && viewItem == 'user-toy'"
				},
				{
					"command": "go-playground.newToy",
					"when": "view == toysView && viewItem == 'user-root'"
				},
				{
					"command": "go-playground.envs.edit",
					"when": "view == envsView && viewItem == 'env-item'"
				},
				{
					"command": "go-playground.envs.edit",
					"when": "view == envsView && viewItem == 'env-item-hidden'"
				},
				{
					"command": "go-playground.envs.delete",
					"when": "view == envsView && viewItem == 'env-item'"
				},
				{
					"command": "go-playground.envs.delete",
					"when": "view == envsView && viewItem == 'env-item-hidden'"
				},
				{
					"command": "go-playground.envs.showOnStatusBar",
					"when": "view == envsView && viewItem == 'env-item-hidden'"
				},
				{
					"command": "go-playground.envs.hideOnStatusBar",
					"when": "view == envsView && viewItem == 'env-item'"
				},
				{
					"command": "go-playground.envs.showOnStatusBar",
					"when": "view == envsView && viewItem == 'env-item-hidden'",
					"group": "inline"
				},
				{
					"command": "go-playground.envs.hideOnStatusBar",
					"when": "view == envsView && viewItem == 'env-item'",
					"group": "inline"
				},
				{
					"command": "go-playground.wiki.openURL",
					"when": "view == wikiView && viewItem == 'wiki-node-info'",
					"group": "inline"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.4",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.55.0",
		"@typescript-eslint/eslint-plugin": "^4.14.1",
		"@typescript-eslint/parser": "^4.14.1",
		"eslint": "^7.19.0",
		"glob": "^7.1.6",
		"mocha": "^8.2.1",
		"typescript": "^4.1.3",
		"vscode-test": "^1.5.0"
	},
	"dependencies": {
		"@types/node-fetch": "^2.5.10",
		"node-fetch": "^2.6.1",
		"reflect-metadata": "^0.1.13",
		"tsyringe": "^4.5.0",
		"uniquefilename": "^1.1.2"
	}
}
